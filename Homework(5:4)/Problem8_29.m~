function [yd] = FirstDeriv-Unique(x,y)
% Author: Shiv Toolsidass
% Differentiation based on second order lagrange polynomials
% Input: accepts vectors x (x-coordinates) and y (y-coordinates)
% Output: yd  (vector with values of derivative at each point)

h = x(2)-x(1); % calculate h based on difference between x2 and x1

yd(1) = (((2*x(1)-x(2)-x(3))/(x(1)-x(2))*(x(1)-x(3)))*y(1)) + ((x(1)-x(3))/((x(2)-x(1))*(x(2)-x(3))))*y(2); %Calculate first coordinate of yd based on 8.35

yd_n = length(x); %get length of yd vector (for for loop)

%iterate from index 2 till yd_n-1 and calculate derivative using two point
%central difference formula
for i = 2: yd_n-1
    yd(i) = (((x(i)-x(i+1))/(x(i-1)-x(i)))*y(i-1)) + 2*x(i)-;
end

%calculate last derivative using three point backward difference formula
yd(yd_n) = (((x(yd_n)-x(yd_n-1))/((x(yd_n-2)-x(yd_n-1))*(x(yd_n-2)-x(yd_n))))*y(yd_n-2)) + (((x(yd_n)-x(yd_n-2))/((x(yd_n-1)-x(yd_n-2))*(x(yd_n-1)-x(yd_n))))*y(yd_n-1));
end

lambda = [0.2 0.25 0.3 0.36 0.45 0.6 1.0 1.6 2.2 3.37];
n = [1.551 1.507 1.488 1.475 1.466 1.458 1.450 1.443 1.435 1.410];

